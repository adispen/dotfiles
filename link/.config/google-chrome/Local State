{
   "browser": {
      "last_redirect_origin": ""
   },
   "local_state": {
      "multiple_profile_prefs_version": 7
   },
   "ntp": {
      "promo_locale": "en-US",
      "promo_version": 7
   },
   "profile": {
      "info_cache": {
         "Default": {
            "avatar_icon": "chrome://theme/IDR_PROFILE_AVATAR_0",
            "background_apps": false,
            "name": "First user",
            "user_name": ""
         }
      },
      "last_active_profiles": [ "Default" ],
      "last_used": "Default"
   },
   "show-first-run-bubble": false,
   "shutdown": {
      "num_processes": 3,
      "num_processes_slow": 2,
      "type": 3
   },
   "uninstall_metrics": {
      "installation_date2": "1392747318",
      "launch_count": "24"
   },
   "user_experience_metrics": {
      "low_entropy_source": 1792,
      "session_id": 23,
      "stability": {
         "breakpad_registration_fail": 24,
         "breakpad_registration_ok": 0,
         "crash_count": 0,
         "debugger_not_present": 24,
         "debugger_present": 0,
         "exited_cleanly": true,
         "incomplete_session_end_count": 0,
         "last_timestamp_sec": "1397262364",
         "launch_count": 24,
         "launch_time_sec": "1397261490",
         "page_load_count": 0,
         "renderer_crash_count": 0,
         "renderer_hang_count": 0,
         "session_end_completed": true,
         "stats_buildtime": "1349832027",
         "stats_version": "22.0.1229.94-64"
      }
   },
   "variations_seed": "",
   "variations_seed_date": "13041735091000000",
   "was": {
      "restarted": false
   }
}
